# Critic2 targets and sources
dist_bin_SCRIPTS = 
bin_PROGRAMS = critic2
noinst_LIBRARIES=libcritic2.a
critic2_SOURCES = critic2.F90 tricks.f90 xdm.f90 stm.f90 bader.f90 yt.f90 qtree_basic.f90 qtree.f90 qtree_gpaths.f90 \
	qtree_tetrawork.f90 qtree_utils.f90 ewald.f90 hirshfeld.f90 bisect.f90 integration.f90 surface.f90 flux.f90 \
	autocp.f90 navigation.f90 nci.f90 rhoplot.f90 meshmod.f90 varbas.f90 fields.f90 grid_tools.f90 grd_atomic.f90 \
	struct_basic.f90 struct_writers.f90 struct_readers.f90 struct.f90 sympg.f90 spgs.f90 grid1_tools.f90 \
	global.f90 dftb_private.f90 wfn_private.f90 pi_private.f90 elk_private.f90 wien_private.f90 abinit_private.f90 \
	tools_system.c tools.f90 arithmetic.F90 hashtype.f90 tools_math.f90 graphics.f90 fragmentmod.f90 tools_io.f90 \
	types.f90 param.F90 keast.f90 quadpack.f90 cfftnd.f90 config.F90 doqhull.c spglib.f90
libcritic2_a_SOURCES = tricks.f90 xdm.f90 stm.f90 bader.f90 yt.f90 qtree_basic.f90 qtree.f90 qtree_gpaths.f90 \
	qtree_tetrawork.f90 qtree_utils.f90 ewald.f90 hirshfeld.f90 bisect.f90 integration.f90 surface.f90 flux.f90 \
	autocp.f90 navigation.f90 nci.f90 rhoplot.f90 meshmod.f90 varbas.f90 fields.f90 grid_tools.f90 grd_atomic.f90 \
	struct_basic.f90 struct_writers.f90 struct_readers.f90 struct.f90 sympg.f90 spgs.f90 grid1_tools.f90 \
	global.f90 dftb_private.f90 wfn_private.f90 pi_private.f90 elk_private.f90 wien_private.f90 abinit_private.f90 \
	tools_system.c tools.f90 arithmetic.F90 hashtype.f90 tools_math.f90 graphics.f90 fragmentmod.f90 tools_io.f90 \
	types.f90 param.F90 keast.f90 quadpack.f90 cfftnd.f90 config.F90 doqhull.c spglib.f90 gui_interface.f90

# Library subdirectories
SUBDIRS = oldlibs ciftbx cubpack qhull spglib

# Static libraries
critic2_LDADD=oldlibs/libmisc.a ciftbx/libciftbx.a cubpack/libcubpack.a \
	spglib/libspglib.a $(LIBADD)
critic2_DEPENDENCIES=$(critic2_LDADD)

# Include the subdirectories with the modules
AM_FCFLAGS= -I$(top_srcdir)/src/cubpack

# Data directory
if !WIN
  AM_FCFLAGS+=-DDATADIR='"$(datadir)"'
else
  AM_FCFLAGS+=-DWIN
endif

# Compilation flags (in config.F90)
if !WIN
  DATE2 := $(shell date || echo "(config) @DATE@")
  AM_FCFLAGS+=-DDATE='"$(DATE2)"'
  COMMIT := $(shell git rev-parse --short HEAD || echo "(config) @VERSION@")
  AM_FCFLAGS+=-DCOMMIT='"$(COMMIT)"'
endif

# Clean the modules as well
mostlyclean-local:
	-rm -rf *.$(MODEXT)

# Modules depend on objects
%.$(MODEXT): %.$(OBJEXT)
	@if [ ! -f $@ ]; then rm $< ; $(MAKE) $< ; fi

# Always recompile the config file to get the compilation details right
config.$(OBJEXT) : .FORCE

.FORCE: 

# Dependencies: generated by makemake.sh
struct_readers.$(OBJEXT) grid_tools.$(OBJEXT) : abinit_private.$(MODEXT)
critic2.$(OBJEXT) integration.$(OBJEXT) gui_interface.$(OBJEXT) : autocp.$(MODEXT)
integration.$(OBJEXT) : bader.$(MODEXT)
critic2.$(OBJEXT) qtree.$(OBJEXT) : bisect.$(MODEXT)
fields.$(OBJEXT) : dftb_private.$(MODEXT)
qtree.$(OBJEXT) fields.$(OBJEXT) : elk_private.$(MODEXT)
critic2.$(OBJEXT) fields.$(OBJEXT) : ewald.$(MODEXT)
critic2.$(OBJEXT) yt.$(OBJEXT) xdm.$(OBJEXT) tricks.$(OBJEXT) surface.$(OBJEXT) stm.$(OBJEXT) rhoplot.$(OBJEXT) quadpack.$(OBJEXT) qtree_utils.$(OBJEXT) qtree_tetrawork.$(OBJEXT) qtree_gpaths.$(OBJEXT) qtree_basic.$(OBJEXT) qtree.$(OBJEXT) nci.$(OBJEXT) navigation.$(OBJEXT) meshmod.$(OBJEXT) integration.$(OBJEXT) hirshfeld.$(OBJEXT) gui_interface.$(OBJEXT) flux.$(OBJEXT) bisect.$(OBJEXT) bader.$(OBJEXT) autocp.$(OBJEXT) : fields.$(MODEXT)
critic2.$(OBJEXT) : flux.$(MODEXT)
struct_writers.$(OBJEXT) struct_basic.$(OBJEXT) nci.$(OBJEXT) : fragmentmod.$(MODEXT)
critic2.$(OBJEXT) xdm.$(OBJEXT) varbas.$(OBJEXT) tricks.$(OBJEXT) surface.$(OBJEXT) struct_writers.$(OBJEXT) struct_readers.$(OBJEXT) struct_basic.$(OBJEXT) struct.$(OBJEXT) stm.$(OBJEXT) rhoplot.$(OBJEXT) quadpack.$(OBJEXT) qtree_utils.$(OBJEXT) qtree_tetrawork.$(OBJEXT) qtree_gpaths.$(OBJEXT) qtree_basic.$(OBJEXT) qtree.$(OBJEXT) pi_private.$(OBJEXT) nci.$(OBJEXT) navigation.$(OBJEXT) meshmod.$(OBJEXT) integration.$(OBJEXT) hirshfeld.$(OBJEXT) gui_interface.$(OBJEXT) grid1_tools.$(OBJEXT) flux.$(OBJEXT) fields.$(OBJEXT) bisect.$(OBJEXT) autocp.$(OBJEXT) : global.$(MODEXT)
critic2.$(OBJEXT) tricks.$(OBJEXT) surface.$(OBJEXT) struct_writers.$(OBJEXT) nci.$(OBJEXT) integration.$(OBJEXT) gui_interface.$(OBJEXT) flux.$(OBJEXT) autocp.$(OBJEXT) : graphics.$(MODEXT)
critic2.$(OBJEXT) xdm.$(OBJEXT) nci.$(OBJEXT) hirshfeld.$(OBJEXT) gui_interface.$(OBJEXT) grid_tools.$(OBJEXT) fields.$(OBJEXT) : grd_atomic.$(MODEXT)
xdm.$(OBJEXT) pi_private.$(OBJEXT) nci.$(OBJEXT) hirshfeld.$(OBJEXT) grd_atomic.$(OBJEXT) elk_private.$(OBJEXT) dftb_private.$(OBJEXT) : grid1_tools.$(MODEXT)
xdm.$(OBJEXT) tricks.$(OBJEXT) rhoplot.$(OBJEXT) nci.$(OBJEXT) integration.$(OBJEXT) hirshfeld.$(OBJEXT) fields.$(OBJEXT) autocp.$(OBJEXT) : grid_tools.$(MODEXT)
param.$(OBJEXT) : hashtype.$(MODEXT)
critic2.$(OBJEXT) : hirshfeld.$(MODEXT)
critic2.$(OBJEXT) tricks.$(OBJEXT) qtree.$(OBJEXT) bisect.$(OBJEXT) : integration.$(MODEXT)
qtree_utils.$(OBJEXT) qtree_tetrawork.$(OBJEXT) qtree.$(OBJEXT) : keast.$(MODEXT)
xdm.$(OBJEXT) tricks.$(OBJEXT) : meshmod.$(MODEXT)
rhoplot.$(OBJEXT) qtree.$(OBJEXT) flux.$(OBJEXT) bisect.$(OBJEXT) autocp.$(OBJEXT) : navigation.$(MODEXT)
critic2.$(OBJEXT) : nci.$(MODEXT)
critic2.$(OBJEXT) fields.$(OBJEXT) : pi_private.$(MODEXT)
critic2.$(OBJEXT) : qtree.$(MODEXT)
qtree_utils.$(OBJEXT) qtree_tetrawork.$(OBJEXT) qtree_gpaths.$(OBJEXT) qtree.$(OBJEXT) : qtree_basic.$(MODEXT)
qtree_tetrawork.$(OBJEXT) : qtree_gpaths.$(MODEXT)
qtree.$(OBJEXT) : qtree_tetrawork.$(MODEXT)
qtree.$(OBJEXT) : qtree_utils.$(MODEXT)
integration.$(OBJEXT) : quadpack.$(MODEXT)
critic2.$(OBJEXT) tricks.$(OBJEXT) : rhoplot.$(MODEXT)
struct_basic.$(OBJEXT) : spglib.$(MODEXT)
critic2.$(OBJEXT) struct_readers.$(OBJEXT) gui_interface.$(OBJEXT) : spgs.$(MODEXT)
critic2.$(OBJEXT) : stm.$(MODEXT)
critic2.$(OBJEXT) nci.$(OBJEXT) gui_interface.$(OBJEXT) autocp.$(OBJEXT) : struct.$(MODEXT)
critic2.$(OBJEXT) yt.$(OBJEXT) xdm.$(OBJEXT) varbas.$(OBJEXT) tricks.$(OBJEXT) surface.$(OBJEXT) struct_writers.$(OBJEXT) struct_readers.$(OBJEXT) struct.$(OBJEXT) stm.$(OBJEXT) rhoplot.$(OBJEXT) qtree_utils.$(OBJEXT) qtree_tetrawork.$(OBJEXT) qtree_gpaths.$(OBJEXT) qtree_basic.$(OBJEXT) qtree.$(OBJEXT) nci.$(OBJEXT) navigation.$(OBJEXT) meshmod.$(OBJEXT) integration.$(OBJEXT) hirshfeld.$(OBJEXT) gui_interface.$(OBJEXT) grd_atomic.$(OBJEXT) flux.$(OBJEXT) fields.$(OBJEXT) ewald.$(OBJEXT) bisect.$(OBJEXT) bader.$(OBJEXT) autocp.$(OBJEXT) : struct_basic.$(MODEXT)
struct.$(OBJEXT) : struct_readers.$(MODEXT)
struct.$(OBJEXT) integration.$(OBJEXT) flux.$(OBJEXT) autocp.$(OBJEXT) : struct_writers.$(MODEXT)
qtree_basic.$(OBJEXT) qtree.$(OBJEXT) bisect.$(OBJEXT) autocp.$(OBJEXT) : surface.$(MODEXT)
struct_basic.$(OBJEXT) : sympg.$(MODEXT)
yt.$(OBJEXT) struct_basic.$(OBJEXT) integration.$(OBJEXT) bisect.$(OBJEXT) autocp.$(OBJEXT) : tools.$(MODEXT)
critic2.$(OBJEXT) arithmetic.$(OBJEXT) yt.$(OBJEXT) xdm.$(OBJEXT) wien_private.$(OBJEXT) wfn_private.$(OBJEXT) varbas.$(OBJEXT) types.$(OBJEXT) tricks.$(OBJEXT) tools_math.$(OBJEXT) tools.$(OBJEXT) sympg.$(OBJEXT) surface.$(OBJEXT) struct_writers.$(OBJEXT) struct_readers.$(OBJEXT) struct_basic.$(OBJEXT) struct.$(OBJEXT) stm.$(OBJEXT) spgs.$(OBJEXT) rhoplot.$(OBJEXT) qtree_utils.$(OBJEXT) qtree_tetrawork.$(OBJEXT) qtree_gpaths.$(OBJEXT) qtree_basic.$(OBJEXT) qtree.$(OBJEXT) pi_private.$(OBJEXT) nci.$(OBJEXT) navigation.$(OBJEXT) meshmod.$(OBJEXT) integration.$(OBJEXT) hirshfeld.$(OBJEXT) gui_interface.$(OBJEXT) grid_tools.$(OBJEXT) grid1_tools.$(OBJEXT) grd_atomic.$(OBJEXT) graphics.$(OBJEXT) global.$(OBJEXT) flux.$(OBJEXT) fields.$(OBJEXT) elk_private.$(OBJEXT) dftb_private.$(OBJEXT) bisect.$(OBJEXT) bader.$(OBJEXT) autocp.$(OBJEXT) abinit_private.$(OBJEXT) : tools_io.$(MODEXT)
arithmetic.$(OBJEXT) xdm.$(OBJEXT) wien_private.$(OBJEXT) tricks.$(OBJEXT) sympg.$(OBJEXT) struct_writers.$(OBJEXT) struct_readers.$(OBJEXT) struct_basic.$(OBJEXT) struct.$(OBJEXT) rhoplot.$(OBJEXT) qtree_tetrawork.$(OBJEXT) qtree_basic.$(OBJEXT) qtree.$(OBJEXT) pi_private.$(OBJEXT) nci.$(OBJEXT) navigation.$(OBJEXT) meshmod.$(OBJEXT) integration.$(OBJEXT) grid_tools.$(OBJEXT) graphics.$(OBJEXT) flux.$(OBJEXT) fields.$(OBJEXT) elk_private.$(OBJEXT) dftb_private.$(OBJEXT) bisect.$(OBJEXT) bader.$(OBJEXT) autocp.$(OBJEXT) : tools_math.$(MODEXT)
critic2.$(OBJEXT) : tricks.$(MODEXT)
arithmetic.$(OBJEXT) yt.$(OBJEXT) xdm.$(OBJEXT) wien_private.$(OBJEXT) wfn_private.$(OBJEXT) varbas.$(OBJEXT) tricks.$(OBJEXT) tools_math.$(OBJEXT) sympg.$(OBJEXT) surface.$(OBJEXT) struct_writers.$(OBJEXT) struct_readers.$(OBJEXT) struct_basic.$(OBJEXT) struct.$(OBJEXT) rhoplot.$(OBJEXT) qtree_tetrawork.$(OBJEXT) qtree_gpaths.$(OBJEXT) qtree_basic.$(OBJEXT) qtree.$(OBJEXT) pi_private.$(OBJEXT) nci.$(OBJEXT) navigation.$(OBJEXT) meshmod.$(OBJEXT) integration.$(OBJEXT) hirshfeld.$(OBJEXT) gui_interface.$(OBJEXT) grid_tools.$(OBJEXT) grid1_tools.$(OBJEXT) grd_atomic.$(OBJEXT) graphics.$(OBJEXT) fragmentmod.$(OBJEXT) flux.$(OBJEXT) fields.$(OBJEXT) elk_private.$(OBJEXT) dftb_private.$(OBJEXT) bisect.$(OBJEXT) bader.$(OBJEXT) autocp.$(OBJEXT) : types.$(MODEXT)
critic2.$(OBJEXT) rhoplot.$(OBJEXT) qtree_utils.$(OBJEXT) qtree_tetrawork.$(OBJEXT) qtree_gpaths.$(OBJEXT) qtree_basic.$(OBJEXT) qtree.$(OBJEXT) navigation.$(OBJEXT) integration.$(OBJEXT) gui_interface.$(OBJEXT) flux.$(OBJEXT) bisect.$(OBJEXT) autocp.$(OBJEXT) : varbas.$(MODEXT)
critic2.$(OBJEXT) struct_readers.$(OBJEXT) integration.$(OBJEXT) fields.$(OBJEXT) : wfn_private.$(MODEXT)
qtree.$(OBJEXT) fields.$(OBJEXT) : wien_private.$(MODEXT)
critic2.$(OBJEXT) : xdm.$(MODEXT)
tricks.$(OBJEXT) integration.$(OBJEXT) : yt.$(MODEXT)
critic2.$(OBJEXT) yt.$(OBJEXT) surface.$(OBJEXT) struct_readers.$(OBJEXT) rhoplot.$(OBJEXT) global.$(OBJEXT) fields.$(OBJEXT) bader.$(OBJEXT) autocp.$(OBJEXT) : arithmetic.$(MODEXT)
critic2.$(OBJEXT) gui_interface.$(OBJEXT) : config.$(MODEXT)
critic2.$(OBJEXT) config.$(OBJEXT) arithmetic.$(OBJEXT) yt.$(OBJEXT) xdm.$(OBJEXT) wien_private.$(OBJEXT) wfn_private.$(OBJEXT) varbas.$(OBJEXT) tricks.$(OBJEXT) tools_math.$(OBJEXT) tools_io.$(OBJEXT) sympg.$(OBJEXT) surface.$(OBJEXT) struct_writers.$(OBJEXT) struct_readers.$(OBJEXT) struct_basic.$(OBJEXT) struct.$(OBJEXT) stm.$(OBJEXT) spgs.$(OBJEXT) rhoplot.$(OBJEXT) quadpack.$(OBJEXT) qtree_utils.$(OBJEXT) qtree_basic.$(OBJEXT) pi_private.$(OBJEXT) nci.$(OBJEXT) navigation.$(OBJEXT) meshmod.$(OBJEXT) integration.$(OBJEXT) gui_interface.$(OBJEXT) grid_tools.$(OBJEXT) grid1_tools.$(OBJEXT) grd_atomic.$(OBJEXT) graphics.$(OBJEXT) global.$(OBJEXT) fragmentmod.$(OBJEXT) flux.$(OBJEXT) fields.$(OBJEXT) ewald.$(OBJEXT) elk_private.$(OBJEXT) dftb_private.$(OBJEXT) bisect.$(OBJEXT) bader.$(OBJEXT) autocp.$(OBJEXT) : param.$(MODEXT)
